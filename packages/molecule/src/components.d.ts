/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@openchemistry/molecule-moljs';
import '@openchemistry/vibrational-spectrum';

import {
  IChemJson,
  IDisplayOptions,
} from '@openchemistry/types';

declare global {

  namespace StencilComponents {
    interface OcMolecule {
      'cjson': IChemJson | string;
      'options': IDisplayOptions;
    }
  }

  interface HTMLOcMoleculeElement extends StencilComponents.OcMolecule, HTMLStencilElement {}

  var HTMLOcMoleculeElement: {
    prototype: HTMLOcMoleculeElement;
    new (): HTMLOcMoleculeElement;
  };
  interface HTMLElementTagNameMap {
    'oc-molecule': HTMLOcMoleculeElement;
  }
  interface ElementTagNameMap {
    'oc-molecule': HTMLOcMoleculeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'oc-molecule': JSXElements.OcMoleculeAttributes;
    }
  }
  namespace JSXElements {
    export interface OcMoleculeAttributes extends HTMLAttributes {
      'cjson'?: IChemJson | string;
      'onBarSelected'?: (event: CustomEvent) => void;
      'options'?: IDisplayOptions;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;